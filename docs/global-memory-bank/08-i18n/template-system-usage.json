{
  "schema": "memory_document_v2",
  "metadata": {
    "id": "template-system-usage",
    "title": "テンプレートシステムの使用方法",
    "documentType": "guide",
    "path": "08-i18n/template-system-usage.json",
    "tags": [
      "template",
      "i18n",
      "internationalization",
      "guide"
    ],
    "lastModified": "2025-03-24T08:21:03.000Z",
    "createdAt": "2025-03-24T08:21:03.000Z",
    "version": 1
  },
  "content": {
    "sections": [
      {
        "title": "概要",
        "content": "このドキュメントは、Memory Bank MCPサーバーのテンプレートシステムの使用方法について説明します。テンプレートシステムを使用して、多言語対応のコンテンツを作成・管理する方法を紹介します。"
      },
      {
        "title": "テンプレートの読み込み",
        "content": "テンプレートを読み込むには、`ReadRulesUseCase`クラスを使用します。このクラスは、テンプレートファイルを読み込み、指定された言語の翻訳を適用します。\n\n```typescript\n// ReadRulesUseCase.ts\nexport class ReadRulesUseCase implements UseCase<string, any> {\n  constructor(\n    private readonly templateRepository: TemplateRepository,\n    private readonly templateRenderer: TemplateRenderer,\n    private readonly rulesDir: string\n  ) {}\n\n  async execute(language: string): Promise<any> {\n    // テンプレートの読み込み\n    const template = await this.templateRepository.loadTemplate('rules');\n    \n    // 翻訳の適用\n    const translatedTemplate = await this.templateRenderer.render(template, language);\n    \n    return translatedTemplate;\n  }\n}\n```"
      },
      {
        "title": "テンプレートの作成",
        "content": "新しいテンプレートを作成するには、以下の手順に従います：\n\n1. テンプレートファイルを作成する（例：docs/templates/json/my-template.json）\n2. 各言語ファイルに翻訳キーと翻訳を追加する\n3. テンプレートを読み込むためのユースケースを作成する\n\n```json\n// my-template.json\n{\n  \"id\": \"my-template\",\n  \"type\": \"system\",\n  \"version\": \"1.0.0\",\n  \"titleKey\": \"template.title.my_template\",\n  \"descriptionKey\": \"template.description.my_template\",\n  \"sections\": [\n    {\n      \"id\": \"introduction\",\n      \"titleKey\": \"template.section.introduction\",\n      \"contentKey\": \"template.content.introduction\",\n      \"isOptional\": false\n    },\n    {\n      \"id\": \"usage\",\n      \"titleKey\": \"template.section.usage\",\n      \"contentKey\": \"template.content.usage\",\n      \"isOptional\": false\n    }\n  ],\n  \"createdAt\": \"2025-03-24T08:21:03.000Z\",\n  \"updatedAt\": \"2025-03-24T08:21:03.000Z\"\n}\n```"
      },
      {
        "title": "翻訳の追加",
        "content": "テンプレートに対応する翻訳を追加するには、各言語ファイルに翻訳キーと翻訳を追加します。\n\n```json\n// ja.json に追加\n{\n  \"template.title.my_template\": \"マイテンプレート\",\n  \"template.description.my_template\": \"マイテンプレートの説明\",\n  \"template.section.introduction\": \"はじめに\",\n  \"template.content.introduction\": \"このテンプレートは...\",\n  \"template.section.usage\": \"使用方法\",\n  \"template.content.usage\": \"このテンプレートを使用するには...\"\n}\n\n// en.json に追加\n{\n  \"template.title.my_template\": \"My Template\",\n  \"template.description.my_template\": \"Description of my template\",\n  \"template.section.introduction\": \"Introduction\",\n  \"template.content.introduction\": \"This template is...\",\n  \"template.section.usage\": \"Usage\",\n  \"template.content.usage\": \"To use this template...\"\n}\n\n// zh.json に追加\n{\n  \"template.title.my_template\": \"我的模板\",\n  \"template.description.my_template\": \"我的模板的描述\",\n  \"template.section.introduction\": \"介绍\",\n  \"template.content.introduction\": \"这个模板是...\",\n  \"template.section.usage\": \"使用方法\",\n  \"template.content.usage\": \"要使用这个模板...\"\n}\n```"
      },
      {
        "title": "テンプレートの更新",
        "content": "既存のテンプレートを更新するには、以下の手順に従います：\n\n1. テンプレートファイルを更新する\n2. 必要に応じて、各言語ファイルの翻訳を更新する\n3. テンプレートの`updatedAt`フィールドを現在の日時に更新する\n\n```json\n// rules.json の更新例\n{\n  \"id\": \"rules\",\n  \"type\": \"system\",\n  \"version\": \"2.0.0\",\n  \"titleKey\": \"template.title.rules\",\n  \"descriptionKey\": \"template.description.rules\",\n  \"sections\": [\n    // 既存のセクション...\n    \n    // 新しいセクションを追加\n    {\n      \"id\": \"advancedUsage\",\n      \"titleKey\": \"template.section.advanced_usage\",\n      \"contentKey\": \"template.content.advanced_usage\",\n      \"isOptional\": true\n    }\n  ],\n  \"createdAt\": \"2025-03-24T08:03:00.000Z\",\n  \"updatedAt\": \"2025-03-24T08:21:03.000Z\"\n}\n```"
      },
      {
        "title": "テンプレートの使用例",
        "content": "テンプレートシステムの使用例として、`read_rules`コマンドと`read_context`コマンドがあります。これらのコマンドは、テンプレートシステムを使用して、メモリバンクのルールと構造に関する情報を多言語で提供します。\n\n```typescript\n// ContextController.ts\nasync execute(request: ReadContextRequest): Promise<ReadContextResponse> {\n  const contextResult: ReadContextResponse = {};\n\n  // ルールを取得（テンプレートシステムを使用）\n  try {\n    logger.debug(`Requesting rules for language: ${request.language}`);\n    contextResult.rules = await this.readRulesUseCase.execute(request.language);\n    logger.debug(`Rules retrieved successfully for language: ${request.language}`);\n  } catch (error) {\n    logger.error(`Failed to read rules for language ${request.language}:`, error);\n    // ルールの読み込み失敗は致命的ではないので、その他のコンテキスト情報は返す\n  }\n\n  // その他のコンテキスト情報を取得...\n\n  return contextResult;\n}\n```"
      },
      {
        "title": "テンプレートシステムの拡張",
        "content": "テンプレートシステムを拡張するには、以下の方法があります：\n\n1. 新しいテンプレートタイプの追加\n2. テンプレートレンダラーの機能拡張（条件付きレンダリング、ループなど）\n3. テンプレートの動的生成\n4. テンプレートのバージョン管理\n\nこれらの拡張は、テンプレートシステムの柔軟性と再利用性を高めるために有用です。"
      },
      {
        "title": "ベストプラクティス",
        "content": "テンプレートシステムを使用する際のベストプラクティスは以下の通りです：\n\n1. テンプレートIDと翻訳キーは一貫した命名規則に従う\n2. セクションIDはキャメルケース、翻訳キーはスネークケースを使用する\n3. 翻訳キーは階層構造を持たせる（template.section.xxx, template.content.xxx など）\n4. テンプレートの更新時は必ず`updatedAt`フィールドを更新する\n5. 翻訳は各言語ファイルで一貫して管理する\n6. テンプレートの変更履歴を記録する"
      },
      {
        "title": "関連ドキュメント",
        "content": "- [テンプレートシステム](template-system.json) - テンプレートシステムの概要と設計\n- [国際化設計](template-system-json-i18n-design.json) - 国際化の設計と実装"
      }
    ]
  }
}
