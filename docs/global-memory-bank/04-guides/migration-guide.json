{
  "schema": "memory_document_v2",
  "metadata": {
    "id": "6c601de3-ad96-473c-a162-edaf773abd55",
    "title": "Markdown から JSON への移行ガイド",
    "documentType": "generic",
    "path": "migration-guide.json",
    "tags": [
      "migration",
      "json",
      "markdown",
      "guide"
    ],
    "lastModified": "2025-03-21T00:55:54.300Z",
    "createdAt": "2025-03-17T02:57:19.438Z",
    "version": 1
  },
  "content": {
    "概要": "Memory Bank 2.0では、データ保存形式としてMarkdownからJSONに移行しています。このガイドでは、既存のMarkdownファイルをJSONに変換する方法と、新しいJSON形式の使用方法について説明します。",
    "移行の背景": "### なぜJSONに移行するのか\n\n1. **構造化データの管理**: JSONはデータの構造を明示的に定義でき、バリデーションが容易\n2. **多言語対応の強化**: 翻訳キーと翻訳テキストの分離が容易\n3. **プログラムによるアクセスの改善**: JSONはプログラムから扱いやすい形式\n4. **スキーマ検証**: JSONスキーマによる型チェックが可能\n\n### 移行のタイムライン\n\n- **現在**: 両方の形式をサポート（Markdownを優先）\n- **移行期間**: 両方の形式をサポート（JSONを優先）\n- **最終段階**: JSONのみをサポート",
    "自動移行": "Memory Bank 2.0では、Markdownファイルを自動的にJSONに変換する機能が組み込まれています。",
    "オートマイグレーション": "MCPサーバー起動時に、自動的にMarkdownファイルをJSONに変換します。\n\n1. サーバーがMarkdownファイルを検出\n2. 対応するJSONファイルが存在しない場合、自動的に変換\n3. 元のMarkdownファイルはバックアップとして保持",
    "手動マイグレーション": "`migrate`コマンドを使用して、手動で移行することもできます。\n\n```bash\n# 特定のディレクトリ内のすべてのMarkdownファイルを変換\nmemory-bank migrate --source ./docs/branch-memory-bank/feature-example\n\n# 特定のファイルを変換\nmemory-bank migrate --file ./docs/global-memory-bank/architecture.md\n\n# オプション\nmemory-bank migrate --help\n```",
    "主なオプション": "- `--backup`: バックアップを作成（デフォルト: true）\n- `--overwrite`: 既存のJSONファイルを上書き（デフォルト: false）\n- `--validate`: 生成されたJSONを検証（デフォルト: true）\n- `--delete-originals`: 元のMarkdownファイルを削除（デフォルト: false）",
    "新しいJSON形式": "### 基本構造\n\nすべてのJSONドキュメントは以下の基本構造に従います：\n\n```json\n{\n  \"schema\": \"memory_document_v2\",\n  \"metadata\": {\n    \"id\": \"unique-uuid\",\n    \"title\": \"ドキュメントタイトル\",\n    \"documentType\": \"document_type\",\n    \"path\": \"relative/path.json\",\n    \"tags\": [\"tag1\", \"tag2\"],\n    \"lastModified\": \"2025-03-17T00:00:00Z\",\n    \"createdAt\": \"2025-03-17T00:00:00Z\",\n    \"version\": 1\n  },\n  \"content\": {\n    // ドキュメントタイプ固有のコンテンツ\n  }\n}\n```",
    "コアドキュメントタイプ": "#### ブランチコンテキスト (branchContext.json)\n\n```json\n{\n  \"schema\": \"memory_document_v2\",\n  \"metadata\": {\n    \"id\": \"branch-context-uuid\",\n    \"title\": \"ブランチコンテキスト\",\n    \"documentType\": \"branch_context\",\n    \"path\": \"branchContext.json\",\n    \"tags\": [\"branch-context\", \"feature-name\"],\n    \"lastModified\": \"2025-03-17T00:00:00Z\",\n    \"createdAt\": \"2025-03-17T00:00:00Z\",\n    \"version\": 1\n  },\n  \"content\": {\n    \"branchName\": \"feature/example\",\n    \"purpose\": \"この機能の目的説明\",\n    \"createdAt\": \"2025-03-17T00:00:00Z\",\n    \"userStories\": [\n      {\n        \"id\": \"story-uuid\",\n        \"description\": \"ユーザーストーリーの説明\",\n        \"completed\": false,\n        \"priority\": 1\n      }\n    ],\n    \"additionalNotes\": \"追加メモ\"\n  }\n}\n```\n\n#### アクティブコンテキスト (activeContext.json)\n\n```json\n{\n  \"schema\": \"memory_document_v2\",\n  \"metadata\": {\n    \"id\": \"active-context-uuid\",\n    \"title\": \"アクティブコンテキスト\",\n    \"documentType\": \"active_context\",\n    \"path\": \"activeContext.json\",\n    \"tags\": [\"active-context\", \"feature-name\"],\n    \"lastModified\": \"2025-03-17T00:00:00Z\",\n    \"createdAt\": \"2025-03-17T00:00:00Z\",\n    \"version\": 1\n  },\n  \"content\": {\n    \"currentWork\": \"現在の作業内容\",\n    \"recentChanges\": [\n      {\n        \"date\": \"2025-03-17T00:00:00Z\",\n        \"description\": \"変更内容\"\n      }\n    ],\n    \"activeDecisions\": [\n      {\n        \"id\": \"decision-uuid\",\n        \"description\": \"決定内容\",\n        \"reason\": \"決定理由\"\n      }\n    ],\n    \"considerations\": [\n      {\n        \"id\": \"consideration-uuid\",\n        \"description\": \"検討内容\",\n        \"status\": \"open\"\n      }\n    ],\n    \"nextSteps\": [\n      {\n        \"id\": \"step-uuid\",\n        \"description\": \"次のステップ\",\n        \"priority\": \"high\"\n      }\n    ]\n  }\n}\n```\n\n#### 進捗状況 (progress.json)\n\n```json\n{\n  \"schema\": \"memory_document_v2\",\n  \"metadata\": {\n    \"id\": \"progress-uuid\",\n    \"title\": \"進捗状況\",\n    \"documentType\": \"progress\",\n    \"path\": \"progress.json\",\n    \"tags\": [\"progress\", \"feature-name\"],\n    \"lastModified\": \"2025-03-17T00:00:00Z\",\n    \"createdAt\": \"2025-03-17T00:00:00Z\",\n    \"version\": 1\n  },\n  \"content\": {\n    \"workingFeatures\": [\n      {\n        \"id\": \"feature-uuid\",\n        \"description\": \"機能説明\",\n        \"implementedAt\": \"2025-03-17T00:00:00Z\"\n      }\n    ],\n    \"pendingImplementation\": [\n      {\n        \"id\": \"pending-uuid\",\n        \"description\": \"実装予定内容\",\n        \"priority\": \"high\",\n        \"estimatedCompletion\": \"2025-03-20T00:00:00Z\"\n      }\n    ],\n    \"status\": \"in-development\",\n    \"completionPercentage\": 50,\n    \"knownIssues\": [\n      {\n        \"id\": \"issue-uuid\",\n        \"description\": \"問題説明\",\n        \"severity\": \"medium\",\n        \"workaround\": \"回避策\"\n      }\n    ]\n  }\n}\n```\n\n#### システムパターン (systemPatterns.json)\n\n```json\n{\n  \"schema\": \"memory_document_v2\",\n  \"metadata\": {\n    \"id\": \"system-patterns-uuid\",\n    \"title\": \"システムパターン\",\n    \"documentType\": \"system_patterns\",\n    \"path\": \"systemPatterns.json\",\n    \"tags\": [\"system-patterns\", \"feature-name\"],\n    \"lastModified\": \"2025-03-17T00:00:00Z\",\n    \"createdAt\": \"2025-03-17T00:00:00Z\",\n    \"version\": 1\n  },\n  \"content\": {\n    \"technicalDecisions\": [\n      {\n        \"id\": \"decision-uuid\",\n        \"title\": \"タイトル\",\n        \"context\": \"コンテキスト\",\n        \"decision\": \"決定内容\",\n        \"consequences\": {\n          \"positive\": [\"ポジティブな影響\"],\n          \"negative\": [\"ネガティブな影響\"]\n        },\n        \"status\": \"accepted\",\n        \"date\": \"2025-03-17T00:00:00Z\",\n        \"alternatives\": [\n          {\n            \"description\": \"代替案\",\n            \"reason\": \"採用しなかった理由\"\n          }\n        ]\n      }\n    ],\n    \"implementationPatterns\": [\n      {\n        \"id\": \"pattern-uuid\",\n        \"name\": \"パターン名\",\n        \"description\": \"説明\",\n        \"useCases\": [\"ユースケース\"],\n        \"codeExample\": \"コード例\"\n      }\n    ]\n  }\n}\n```",
    "テンプレートシステム": "Memory Bank 2.0では、テンプレートシステムもJSON化されています。テンプレートの構造と翻訳コンテンツが分離され、多言語対応が強化されています。",
    "テンプレート構造": "テンプレート構造は、`src/templates/json/`ディレクトリに保存されています。例えば、`rules.json`は以下のような構造になっています：\n\n```json\n{\n  \"schema\": \"template_v1\",\n  \"metadata\": {\n    \"id\": \"rules\",\n    \"titleKey\": \"template.title.rules\",\n    \"descriptionKey\": \"template.description.rules\",\n    \"type\": \"system\",\n    \"lastModified\": \"2025-03-17T11:49:00.000Z\"\n  },\n  \"content\": {\n    \"sections\": [\n      {\n        \"id\": \"globalMemoryBank\",\n        \"titleKey\": \"template.section.global_memory_bank\",\n        \"contentKey\": \"template.content.global_memory_bank\",\n        \"isOptional\": false\n      },\n      // 他のセクション..\n    ],\n    \"placeholders\": {}\n  }\n}\n```",
    "翻訳ファイル": "翻訳ファイルは、`src/infrastructure/i18n/translations/`ディレクトリに保存されています。例えば、`en.json`は以下のような構造になっています：\n\n```json\n{\n  \"language\": \"en\",\n  \"translations\": {\n    \"template.title.rules\": \"Memory Bank Rules\",\n    \"template.description.rules\": \"Explanation of memory bank usage rules and structure\",\n    \"template.section.global_memory_bank\": \"Global Memory Bank\",\n    \"template.content.global_memory_bank\": \"The \\\"Global Memory Bank\\\" manages common knowledge..\",\n    // 他の翻訳..\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"updatedAt\": \"2025-03-17T11:49:00.000Z\"\n  }\n}\n```",
    "既存コードの更新": "### ファイルパスの更新\n\nMarkdownファイルを参照しているコードを更新する必要があります。例えば：\n\n```typescript\n// 変更前\nconst mdFilePath = path.join(dirname, 'templates', `rules-${language}.md`);\nconst content = await fs.readFile(mdFilePath, 'utf-8');\n\n// 変更後\nconst jsonFilePath = path.join(dirname, 'templates', 'json', `rules-${language}.json`);\nconst content = await fs.readFile(jsonFilePath, 'utf-8');\n```\n\n### パース処理の更新\n\nMarkdownをパースしているコードを更新する必要があります。例えば：\n\n```typescript\n// 変更前\nconst parsedContent = parseMarkdown(content);\n\n// 変更後\nconst parsedContent = JSON.parse(content);\n```",
    "トラブルシューティング": "### 自動移行が失敗する場合\n\n1. ログを確認して、エラーの原因を特定\n2. 手動で移行を試みる\n3. 問題が解決しない場合は、元のMarkdownファイルを修正して再試行\n\n### JSONファイルが正しく読み込まれない場合\n\n1. JSONの構文が正しいことを確認\n2. スキーマに準拠していることを確認\n3. ファイルパスが正しいことを確認\n\n### 移行後にコンテンツが失われる場合\n\n1. バックアップファイルを確認\n2. 移行ログを確認\n3. 手動で移行を再試行",
    "サポートとフィードバック": "移行に関する問題やフィードバックは、以下の方法で報告してください：\n\n- GitHub Issues: [https://github.com/example/memory-bank/issues](https://github.com/example/memory-bank/issues)\n- メール: support@example.com",
    "参考資料": "- [JSON Schema](https://json-schema.org/)\n- [Memory Bank 2.0: JSON ベースアーキテクチャ詳細設計](/docs/global-memory-bank/json-based-architecture.md)\n- [テンプレートシステムのJSON化と多言語対応 - 設計仕様書](/docs/global-memory-bank/template-system-json-i18n-design.md)"
  }
}
