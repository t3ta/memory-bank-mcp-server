{
  "schema": "memory_document_v2",
  "metadata": {
    "id": "e2e-test-implementation",
    "title": "E2E Test Implementation Guide",
    "documentType": "guide",
    "path": "e2e-test-implementation.json",
    "tags": [
      "testing",
      "e2e",
      "cli",
      "implementation"
    ],
    "lastModified": "2025-03-21T10:00:00.000Z",
    "createdAt": "2025-03-21T10:00:00.000Z",
    "version": 1
  },
  "content": {
    "sections": [
      {
        "id": "introduction",
        "title": "Introduction",
        "content": "This document outlines the implementation approach for end-to-end (E2E) tests in the Memory Bank CLI."
      },
      {
        "id": "test_structure",
        "title": "Test Structure",
        "content": "E2E tests for the CLI are organized by command category. Each command has its own test file and is located in the appropriate subdirectory under `tests/e2e/commands/`.\n\nFor example:\n- `tests/e2e/commands/branch/read-branch.test.ts` - Tests for the read-branch command\n- `tests/e2e/commands/global/read-global.test.ts` - Tests for the read-global command\n- `tests/e2e/commands/context/read-context.test.ts` - Tests for the read-context command"
      },
      {
        "id": "helper_utilities",
        "title": "Helper Utilities",
        "content": "Several helper utilities are available in the `tests/e2e/helpers/` directory to make E2E testing easier:\n\n1. `cli-runner.ts` - Provides utilities for executing CLI commands in tests\n2. `setup.ts` - Functions for creating test directories and files\n3. `test-utils.ts` - Assertion utilities and other test helpers"
      },
      {
        "id": "test_pattern",
        "title": "Test Pattern",
        "content": "E2E tests typically follow this pattern:\n\n1. **Setup**: Create temporary test directories and files\n2. **Execute**: Run the CLI command with various arguments\n3. **Assert**: Verify the command output and effects\n4. **Cleanup**: Remove temporary test directories"
      },
      {
        "id": "best_practices",
        "title": "Best Practices",
        "content": "When implementing E2E tests, follow these best practices:\n\n1. Test both success and failure cases\n2. Test with different option combinations\n3. Verify command output format (JSON vs. pretty/text)\n4. Check for correct exit codes (0 for success, non-zero for failure)\n5. Use a clean test environment for each test case\n6. Use the provided helper utilities where possible\n7. Make test descriptions clear and specific"
      },
      {
        "id": "recent_updates",
        "title": "Recent Updates",
        "content": "Recent changes to the E2E test implementation:\n\n1. Added support for JSON document tests\n2. Implemented tests for context-related commands\n3. Updated ReadRulesUseCase to read from JSON templates instead of Markdown files\n4. Created helper utilities for testing JSON documents"
      },
      {
        "id": "command_categories",
        "title": "Command Categories",
        "content": "The CLI commands are organized into these categories:\n\n1. **Branch Commands** - Operations on branch memory bank\n2. **Global Commands** - Operations on global memory bank\n3. **JSON Commands** - Operations specific to JSON documents\n4. **Context Commands** - Reading rules and context information\n5. **Utility Commands** - Misc. utilities like recent-branches\n6. **Migration Commands** - Commands for migrating between formats"
      }
    ]
  }
}