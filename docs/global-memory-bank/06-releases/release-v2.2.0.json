{
  "schema": "memory_document_v2",
  "metadata": {
    "id": "release-v2.2.0",
    "title": "リリースノート v2.2.0",
    "documentType": "release",
    "path": "06-releases/release-v2.2.0.json",
    "tags": [
      "release",
      "v2.2.0",
      "json-patch",
      "documentation"
    ],
    "lastModified": "2025-03-24T14:10:00.000Z",
    "createdAt": "2025-03-24T14:10:00.000Z",
    "version": 1
  },
  "content": {
    "sections": [
      {
        "title": "バージョン 2.2.0 概要",
        "content": "このリリースでは、JSON Patchサポート、workspaceオプション、テンプレートシステムの統合など多数の機能強化が含まれています。また、テスト環境の最適化やロギングシステムの改善も行われました。"
      },
      {
        "title": "主要な新機能",
        "content": "### JSON Patchのサポート\nJSONドキュメントに対して部分的な更新を行うためのJSON Patch（RFC 6902）サポートを追加しました。これにより、ドキュメント全体ではなく、特定の部分のみを更新することが可能になります。\n\n### workspaceオプションの追加\nコマンドラインにworkspaceオプションを追加し、プロジェクトのルートディレクトリを指定可能になりました。これにより、異なるプロジェクトディレクトリでの作業が容易になります。\n\n### テンプレートシステムの強化\nReadRulesUseCaseにテンプレート読み込みのサポートを追加し、テンプレートシステムをアプリケーションに統合しました。"
      },
      {
        "title": "改善点",
        "content": "### テスト環境\n- ts-mockitoをjest.fn()に置き換え\n- テスト環境の最適化\n\n### ロギング\n- console.logをloggerに置き換え（cli/ディレクトリを除く）\n- ロギングシステムの改善\n\n### エラー処理\n- コアファイル操作のエラー処理を強化\n- JSONドキュメント処理におけるエラー処理の改善"
      },
      {
        "title": "バグ修正",
        "content": "- ReadContextUseCaseが常にフィルタリングされたコアファイルを返すように修正\n- 空のコード変更に対処するための適切なロギング調整\n- read_context応答データをMCPプロトコル準拠のために適切にフォーマット\n- read_contextハンドラーの壊れたケース構造を修正"
      },
      {
        "title": "リファクタリング",
        "content": "- E2Eテストのセットアップと構成ファイルを削除し、テスト構造を合理化\n- Jest設定を更新し、サービスの登録にテンプレートコントローラーを追加"
      },
      {
        "title": "注意事項",
        "content": "このリリースでは、v2.1.0でMarkdownのサポートが非推奨となり、JSONフォーマットのみをサポートするようになりました。すべてのドキュメントはJSONフォーマットで作成・管理してください。"
      },
      {
        "title": "貢献者",
        "content": "- t3ta\n- Takahito Mita"
      }
    ]
  }
}