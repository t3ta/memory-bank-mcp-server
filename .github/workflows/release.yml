name: Release

on:
  push:
    branches: [master]

# コンカレンシー制御 - 同じブランチで同時に実行されないようにする
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Run tests
        run: yarn test
      
      - name: Build
        run: yarn build
      
      - name: Get version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      
      - name: Check if tag exists
        id: check-tag
        run: |
          if git rev-parse v${{ steps.package-version.outputs.current-version }} >/dev/null 2>&1; then
            echo "Tag already exists, skipping tag creation"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Git tag
        if: steps.check-tag.outputs.tag_exists != 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a v${{ steps.package-version.outputs.current-version }} -m "Release v${{ steps.package-version.outputs.current-version }}"
          git push origin v${{ steps.package-version.outputs.current-version }}
      
      - name: Check if release exists
        id: check-release
        run: |
          RELEASE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.package-version.outputs.current-version }}")
          if [ "$RELEASE_EXISTS" = "200" ]; then
            echo "Release already exists, skipping release creation"
            echo "release_exists=true" >> $GITHUB_OUTPUT
          else
            echo "release_exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Create GitHub Release
        if: steps.check-tag.outputs.tag_exists != 'true' && steps.check-release.outputs.release_exists != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.current-version }}
          name: Release v${{ steps.package-version.outputs.current-version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check if package version exists on npm
        id: check-npm
        run: |
          if npm view memory-bank-mcp-server@${{ steps.package-version.outputs.current-version }} version &>/dev/null; then
            echo "Package version already exists on npm, skipping publish"
            echo "npm_exists=true" >> $GITHUB_OUTPUT
          else
            echo "npm_exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Publish to npm
        if: steps.check-npm.outputs.npm_exists != 'true'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
