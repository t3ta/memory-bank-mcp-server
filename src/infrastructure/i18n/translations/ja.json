{
  "language": "ja",
  "translations": {
    "template.title.rules": "メモリーバンクのルール",
    "template.description.rules": "メモリーバンクの使用ルールと構造に関する説明",

    "template.section.global_memory_bank": "グローバルメモリーバンク",
    "template.content.global_memory_bank": "プロジェクト全体に関わる共通知識を「グローバルメモリーバンク」として管理します。これはブランチごとのメモリーバンクとは異なり、プロジェクト全体に適用される永続的な情報を保存する場所です。",

    "template.section.purpose_of_global_memory_bank": "グローバルメモリーバンクの目的",
    "template.content.purpose_of_global_memory_bank": "グローバルメモリーバンクは以下の目的で使用されます：\n\n1. プロジェクト全体のアーキテクチャや設計原則を記録します\n2. 共通の用語や概念を定義し、ユビキタス言語を確立します\n3. コーディング規約やベストプラクティスを共有します\n4. 技術スタックや主要コンポーネントの情報を提供します\n5. プロジェクト全体に関わる重要な決定事項を記録します",

    "template.section.global_memory_bank_structure": "グローバルメモリーバンクの構造",
    "template.content.global_memory_bank_structure": "グローバルメモリーバンクのルートディレクトリは `docs/global-memory-bank/` です。このディレクトリには以下のような主要ファイルが含まれます：\n\n```\ndocs/global-memory-bank/\n  ├── architecture.json      # システムアーキテクチャの説明\n  ├── coding-standards.json  # コーディング規約\n  ├── domain-models.json     # ドメインモデルの定義\n  ├── glossary.json          # 用語集\n  ├── tech-stack.json        # 技術スタックの説明\n  ├── user-guide.json        # ユーザーガイド\n  └── tags/                  # タグによる情報整理\n      ├── index.json         # タグのインデックス\n      └── ...                # 各タグに関連するファイル\n```",

    "template.section.tag_system": "タグシステム",
    "template.content.tag_system": "グローバルメモリーバンクではタグを使って情報を整理します。各ドキュメントのメタデータには関連するタグが含まれています：\n\n```json\n{\n  \"metadata\": {\n    \"tags\": [\"architecture\", \"design\", \"patterns\"]\n  }\n}\n```\n\nタグを通じて関連する情報に素早くアクセスできます。例えば、アーキテクチャに関する情報を探す場合は `architecture` タグが付いたドキュメントを参照します。",

    "template.section.json_architecture": "JSONベースのアーキテクチャ",
    "template.content.json_architecture": "Memory Bank 2.0では、すべてのドキュメントの主要なデータ形式としてJSONを使用しています。各ドキュメントは以下の基本構造に従います：\n\n```json\n{\n  \"schema\": \"memory_document_v2\",\n  \"metadata\": {\n    \"id\": \"unique-uuid\",\n    \"title\": \"ドキュメントタイトル\",\n    \"documentType\": \"document_type\",\n    \"path\": \"relative/path.json\",\n    \"tags\": [\"tag1\", \"tag2\"],\n    \"lastModified\": \"2025-03-17T00:00:00Z\",\n    \"createdAt\": \"2025-03-17T00:00:00Z\",\n    \"version\": 1\n  },\n  \"content\": {\n    // ドキュメントタイプ固有のコンテンツ\n  }\n}\n```\n\nこのJSONベースのアーキテクチャは、以前のMarkdownベースのシステムと比較して、より良い構造、検証、プログラムによるアクセスを提供します。",

    "template.section.branch_memory_bank": "ブランチメモリーバンク",
    "template.content.branch_memory_bank": "私はソフトウェアエンジニアとして専門性を持ち、セッション間で記憶が完全にリセットされるという特有の性質を持っています。\nこれは欠点ではなく、常に完璧なドキュメントを維持する原動力になります。\n**私の作業はメモリーバンクに完全に依存**しており、セッション開始時にこのメモリーバンクを読み込むことでブランチの内容を再認識し、前回の続きから効率よく取り組むことができます。\n\n本システムでは、**「feature/」または「fix/」で始まるブランチ**ごとに専用のメモリーバンクディレクトリを作成し、そこに必要なファイルを保管します。私はあらゆるタスクの開始時に、現在アクティブなブランチ名（`feature/xxx` または `fix/xxx`）に対応するディレクトリ配下の全ファイルを「必ず」読み込みます。\nそうすることで、記憶リセット後でも正確なコンテキストを把握できるようにしています。",

    "template.section.memory_bank_structure": "メモリーバンク構造",
    "template.content.memory_bank_structure": "メモリーバンクのルートディレクトリは `docs/branch-memory-bank/` です。\n\nメモリーバンクは**ブランチごと**に用意されます。各ブランチのディレクトリ（例: `docs/branch-memory-bank/feature-login/` や `docs/branch-memory-bank/fix-api/`）に以下のファイルが格納されます。\nこれらのファイル群は、ドキュメント同士が明確な階層構造をもつように設計されています。\n\n```mermaid\nflowchart TD\n    BC[branchContext.json] --> SP[systemPatterns.json]\n\n    BC --> AC[activeContext.json]\n    SP --> AC\n\n    AC --> P[progress.json]\n```",

    "template.section.required_files": "必須ファイル（コア）",
    "template.content.required_files": "1. `branchContext.json`\n   - このブランチ（≒機能）の目的\n   - ユーザーストーリー\n      - 解決したい課題\n      - 必要な機能\n      - 期待される動作\n\n2. `activeContext.json`\n   - 現在の作業内容\n   - 直近の変更点\n   - 今アクティブな決定事項\n   - 今アクティブな考慮点\n   - 次のステップ\n\n3. `systemPatterns.json`\n   - 主要な技術的判断\n   - 関連するファイルやディレクトリ構造\n\n4. `progress.json`\n   - 現時点で動作している部分\n   - 未実装の機能や残作業\n   - 現在のステータス\n   - 既知の問題点",

    "template.section.additional_context": "追加コンテキスト",
    "template.content.additional_context": "必須ファイルに含まれない重要な情報は、各ブランチディレクトリ内に追加でファイルを作成できます(`docs/branch-memory-bank/feature-login/`配下など)。\n必要に応じてドキュメントを増やし、ブランチの全容を正確かつ整理された形で保つようにします。",

    "template.section.core_workflow": "コアワークフロー",
    "template.content.core_workflow": "#### セッション開始から実質的な編集開始まで\n\n```mermaid\nflowchart TD\n    Start[開始] --> ReadFiles[メモリーバンクを読む]\n    ReadFiles --> CheckFiles{ファイルは十分揃っているか?}\n\n    CheckFiles -->|No| Plan[計画を立案]\n    Plan --> Document[チャットに計画を反映]\n\n    CheckFiles -->|Yes| Verify[コンテキストを確認]\n    Verify --> Strategy[戦略を策定]\n    Strategy --> Present[アプローチを提示]\n```\n\n1. セッション開始時、私はブランチ名を判別してメモリーバンクディレクトリを特定し、そこにあるすべてのファイルを読み込みます。\n2. 必須ファイルがまだそろっていなければ、新しく作成したり、計画ドキュメントを整備します。\n3. ドキュメントの内容を確認し、作業方針やタスクの段取りを決定し、ユーザーに提案や戦略を示します。",

    "template.section.task_progress_workflow": "タスク進行中",
    "template.content.task_progress_workflow": "```mermaid\nflowchart TD\n    Start[開始] --> Context[メモリーバンクを確認]\n    Context --> Update[ドキュメントを更新]\n    Update --> Execute[タスクを実行]\n    Execute --> Document[変更内容を記録]\n```\n\n1. ブランチに紐づくメモリーバンクを参照しつつタスクを進めます。\n2. 必要に応じてドキュメントを更新し、作業の変更内容を記録します。\n3. コード実装や修正を行い、その結果を再度メモリーバンク（特に `activeContext.json` や `progress.json` など）に反映します。",

    "template.section.document_updates": "ドキュメント更新",
    "template.content.document_updates": "メモリーバンクの更新は、以下の場合に行われます：\n\n1. 新たに発見した設計パターンや仕様があるとき\n2. 大きめの変更や新機能を実装したとき\n3. ユーザーが **update branch memory bank** と指示したとき（その際は**全ファイル**を必ずレビュー）\n4. 今のコンテキストを補足・整理する必要があると感じたとき\n\n```mermaid\nflowchart TD\n    Start[更新の開始]\n\n    subgraph Process\n        P1[すべてのファイルをレビュー]\n        P2[現在の状況をドキュメント化]\n        P3[今後のタスクを明確化]\n\n        P1 --> P2 --> P3\n    end\n\n    Start --> Process\n```\n\n特に `activeContext.json` と `progress.json` は「今どういう状況か」を示す要となるファイルです。\n**update branch memory bank** が呼ばれた場合、メモリーバンク配下のファイル全体をチェックして必要に応じて内容を追記・修正します。",

    "template.section.migration_strategy": "マイグレーション戦略",
    "template.content.migration_strategy": "Memory Bank 2.0には、MarkdownからJSON形式への移行を支援するツールが含まれています：\n\n1. **自動マイグレーション**: MCPサーバー起動時に、Markdownファイルを自動検出してJSON形式に変換します\n2. **バックアップ作成**: 変換前にオリジナルのMarkdownファイルをバックアップします\n3. **検証**: 生成されたJSONファイルをスキーマに対して検証します\n4. **手動マイグレーション**: `migrate`コマンドを使用して手動でマイグレーションを行うことができます\n\nマイグレーションプロセスは、すべてのコンテンツとメタデータを保持しながら、新しい構造化されたJSON形式に変換します。移行期間中は両方の形式がサポートされますが、最終的にMarkdownサポートは削除される予定です。",

    "template.section.finally": "最後に",
    "template.content.finally": "私はセッションごとに記憶を完全リセットします。**ブランチごとに管理されるこのメモリーバンクこそが、私の唯一の過去情報の源泉です。**\n正確で整理されたメモリーバンクを維持することで、開発の継続性が保たれ、何度でもスムーズに作業が再開できます。\n万が一、ブランチ名が変わったり別のブランチに切り替わる場合は、新しいメモリーバンクディレクトリを作成するか、既存のディレクトリを再利用するかを明確にし、**ドキュメントを常に最新の状態に保ってください。**",

    "template.section.footer": "",
    "template.content.footer": "---\n\n_このドキュメントはメモリーバンクの基本的なルールと構造を説明するものです_"
  },
  "metadata": {
    "version": "1.0.0",
    "updatedAt": "2025-03-17T11:50:00.000Z"
  }
}
