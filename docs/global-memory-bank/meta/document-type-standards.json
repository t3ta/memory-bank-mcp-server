{
  "schema": "memory_document_v2",
  "metadata": {
    "id": "document-type-standards",
    "title": "標準ドキュメントタイプ定義",
    "documentType": "reference",
    "path": "meta/document-type-standards.json",
    "tags": [
      "meta",
      "reference",
      "documentation",
      "standards"
    ],
    "lastModified": "2025-03-21T19:15:00.000Z",
    "createdAt": "2025-03-21T19:15:00.000Z",
    "version": 1
  },
  "content": {
    "sections": [
      {
        "title": "標準ドキュメントタイプの概要",
        "content": "このドキュメントは、グローバルメモリバンク内で使用する標準的なドキュメントタイプを定義します。各ドキュメントは、その内容と目的に応じて適切なドキュメントタイプを使用することで、一貫性のある構造と分類が可能になります。\n\nドキュメントタイプは、メタデータの `documentType` フィールドに指定します。"
      },
      {
        "title": "標準ドキュメントタイプ一覧",
        "content": "以下に、グローバルメモリバンクで使用する標準ドキュメントタイプを定義します：\n\n1. **design** - 設計文書\n2. **implementation** - 実装文書\n3. **guide** - ガイド文書\n4. **reference** - リファレンス文書\n5. **analysis** - 分析文書\n6. **plan** - 計画文書\n7. **decision** - 決定事項文書\n8. **architecture** - アーキテクチャ文書\n9. **glossary** - 用語集文書\n10. **index** - インデックス文書\n11. **meta** - メタ情報文書\n12. **changelog** - 変更履歴文書\n13. **test** - テスト文書\n14. **integration** - 統合文書\n15. **readme** - README文書"
      },
      {
        "title": "ドキュメントタイプ詳細",
        "content": "### 1. design\n**説明**: システムの設計に関する文書\n**推奨セクション**: 概要、要件、アーキテクチャ、コンポーネント、インターフェース、データモデル、依存関係\n**適切なタグ**: design, architecture, system, planning\n**場所**: 02-architecture/ ディレクトリ\n\n### 2. implementation\n**説明**: 実装の詳細を記述した文書\n**推奨セクション**: 概要、前提条件、実装詳細、API、テスト方法、使用例\n**適切なタグ**: implementation, code, development\n**場所**: 03-implementation/ ディレクトリ\n\n### 3. guide\n**説明**: ユーザーやデベロッパー向けのガイド文書\n**推奨セクション**: 概要、使い方、サンプル、FAQ、トラブルシューティング\n**適切なタグ**: guide, documentation, how-to\n**場所**: 04-guides/ ディレクトリ\n\n### 4. reference\n**説明**: 参照用の情報を含む文書\n**推奨セクション**: 概要、リファレンス項目（アルファベット順）、関連リソース\n**適切なタグ**: reference, documentation\n**場所**: 様々なディレクトリ\n\n### 5. analysis\n**説明**: 分析結果や調査情報を含む文書\n**推奨セクション**: 概要、方法、分析結果、考察、結論、参考資料\n**適切なタグ**: analysis, research, data\n**場所**: 09-refactoring/analysis/ または 02-architecture/ ディレクトリ\n\n### 6. plan\n**説明**: 実装計画やロードマップを含む文書\n**推奨セクション**: 概要、目標、フェーズ、スケジュール、リソース、リスク管理\n**適切なタグ**: plan, roadmap, strategy\n**場所**: 様々なディレクトリ\n\n### 7. decision\n**説明**: アーキテクチャや設計上の決定事項を記録した文書\n**推奨セクション**: 概要、コンテキスト、決定事項、代替案、影響、参考資料\n**適切なタグ**: decision, architecture, design\n**場所**: 02-architecture/ ディレクトリ\n\n### 8. architecture\n**説明**: システム全体のアーキテクチャを記述した文書\n**推奨セクション**: 概要、アーキテクチャスタイル、コンポーネント、インターフェース、データフロー、デプロイメント\n**適切なタグ**: architecture, design, system\n**場所**: 02-architecture/ ディレクトリ\n\n### 9. glossary\n**説明**: 用語の定義を含む文書\n**推奨セクション**: 概要、用語定義（アルファベット順）\n**適切なタグ**: glossary, terminology, definitions\n**場所**: 01-project/ ディレクトリ\n\n### 10. index\n**説明**: 他のドキュメントへのインデックスを含む文書\n**推奨セクション**: 概要、インデックス項目\n**適切なタグ**: index, navigation, meta\n**場所**: ルートディレクトリや各サブディレクトリ\n\n### 11. meta\n**説明**: メモリバンク自体に関するメタ情報を含む文書\n**推奨セクション**: 概要、メタデータ、関連情報\n**適切なタグ**: meta, memory-bank\n**場所**: meta/ ディレクトリ\n\n### 12. changelog\n**説明**: 変更履歴を記録した文書\n**推奨セクション**: 概要、変更内容、バージョン、日付\n**適切なタグ**: changelog, release, version\n**場所**: 06-releases/ ディレクトリ\n\n### 13. test\n**説明**: テスト戦略やテスト結果を含む文書\n**推奨セクション**: 概要、テスト戦略、テストケース、結果、カバレッジ\n**適切なタグ**: testing, qa, verification\n**場所**: 05-testing/ ディレクトリ\n\n### 14. integration\n**説明**: 複数のドキュメントや概念を統合した文書\n**推奨セクション**: 概要、統合の目的、統合コンテンツ、関連ドキュメント\n**適切なタグ**: integration, consolidated\n**場所**: 様々なディレクトリ\n\n### 15. readme\n**説明**: ディレクトリやプロジェクトの概要を説明する文書\n**推奨セクション**: 概要、内容、使い方、関連リソース\n**適切なタグ**: readme, documentation, guide\n**場所**: 各ディレクトリのルート"
      },
      {
        "title": "セクション構造のガイドライン",
        "content": "各ドキュメントは、適切なセクション構造を持つべきです。以下に一般的なガイドラインを示します：\n\n1. **すべてのドキュメントに必要な基本セクション**:\n   - タイトルセクション（ドキュメントのメタデータに含まれる）\n   - 概要または導入セクション（ドキュメントの目的と内容を簡潔に説明）\n   - 本体セクション（ドキュメントタイプに応じた内容）\n   - 結論または要約セクション（必要に応じて）\n\n2. **セクションの命名**:\n   - 簡潔で明確な名前を使用する\n   - 一貫したスタイルを使用する（例：名詞形、疑問形など）\n   - 階層構造がわかりやすいように適切にネストする\n\n3. **セクションの内容**:\n   - 各セクションは単一のトピックまたは関連するトピックのグループを扱う\n   - 適切な見出しレベルを使用してセクションを階層化する\n   - セクション間の論理的な流れを維持する\n\n4. **セクションの長さ**:\n   - 各セクションは読みやすい長さにする\n   - 長いセクションは、必要に応じてサブセクションに分割する"
      },
      {
        "title": "言語の一貫性に関するガイドライン",
        "content": "グローバルメモリバンク内のドキュメントは、言語の一貫性を維持するために以下のガイドラインに従うべきです：\n\n1. **言語の選択**:\n   - 英語をすべてのドキュメントの第一言語とする\n   - 日本語のコンテンツを含める場合は、英語の翻訳も提供する\n   - ドキュメントのタイトルは必ず英語にする\n\n2. **スタイルと形式**:\n   - 明確でシンプルな文を使用する\n   - 一貫した時制を使用する（通常は現在形）\n   - アクティブボイス（能動態）を優先する\n   - 技術用語は統一して使用する\n\n3. **フォーマット**:\n   - 見出しは「Title Case」または「Sentence case」のいずれかを一貫して使用する\n   - 箇条書きリストには同じ文法構造を使用する\n   - コードや技術用語は適切にフォーマットする\n\n4. **用語の統一**:\n   - プロジェクト全体で統一された用語を使用する\n   - 略語を使用する場合は、初出時に完全形を示す\n   - 用語の一貫性を維持するために用語集を参照する"
      },
      {
        "title": "実装手順",
        "content": "グローバルメモリバンク内の既存のドキュメントを標準化するには、以下の手順に従ってください：\n\n1. **レビュー**:\n   - すべてのドキュメントをレビューし、現在のドキュメントタイプを確認する\n   - 標準タイプに適合しないドキュメントを特定する\n\n2. **マッピング**:\n   - 各ドキュメントを最も適切な標準タイプにマッピングする\n   - 特殊なケースを記録し、必要に応じて新しいタイプを提案する\n\n3. **更新**:\n   - ドキュメントのメタデータを更新して、適切なドキュメントタイプを設定する\n   - セクション構造を標準化し、必要に応じてセクションを追加または再編成する\n   - 言語の一貫性を確保するために内容を見直す\n\n4. **検証**:\n   - 更新後のドキュメントが標準に準拠していることを確認する\n   - 変更がドキュメントの意味や有用性に悪影響を与えていないことを確認する"
      }
    ]
  }
}