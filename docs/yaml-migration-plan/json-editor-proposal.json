{
  "schema": "memory_document_v2",
  "metadata": {
    "id": "afe76454-a20e-4faf-97cd-839ee301ce15",
    "title": "JSONエディタ機能の提案",
    "documentType": "generic",
    "path": "json-editor-proposal.md",
    "tags": [],
    "lastModified": "2025-03-21T19:30:40.792Z",
    "createdAt": "2025-03-21T19:30:40.792Z",
    "version": 1
  },
  "content": {
    "json": [
      "1. **高度なシンタックスハイライト**:\nJSONの構造に基づいた色分け\nネストレベルに応じた色の変化\nキーと値の視覚的な区別\n2. **インテリジェントなフォーマット**:\n自動インデント\n一貫した空白とフォーマットの適用\nカスタマイズ可能なフォーマットルール\n3. **構造の折りたたみ**:\nネストされたオブジェクトや配列の折りたたみ\n特定のセクションに焦点を当てた編集\n階層レベルごとの折りたたみ制御\n4. **スキーマ検証と自動補完**:\nZodスキーマに基づいた検証\nコンテキストに応じた自動補完\nエラーと警告のインラインハイライト\n5. **擬似コメントサポート**:\n特殊なキー（例: `\"__comment__\"`）を使用したコメントの実装\nコメントの視覚的な区別\nエクスポート時にコメントを保持または削除するオプション\n6. **ビジュアル編集モード**:",
      "フォームベースの編集インターフェース",
      "ドラッグ＆ドロップによる構造の再編成",
      "テーブルビューやツリービューなどの代替表示オプション"
    ],
    "yaml": [
      "1. **既存のコードベースとの互換性**:\n既存のJSONパーサーとジェネレーターをそのまま使用可能\n移行コストが低い\n既存のツールやスクリプトとの互換性を維持\n2. **厳格なスキーマ検証**:\nJSONの厳格な構造により、検証が容易\n型の安全性が高い\nパースエラーが少ない\n3. **実装の容易さ**:\n既存のエディタコンポーネントを活用可能\n広く使用されているフォーマットのため、リソースが豊富\n学習曲線が緩やか\n1. **本質的な可読性**:\nインデントベースの構造\n中括弧やカンマが不要\n複数行文字列のネイティブサポート\n2. **コメントのネイティブサポート**:\n標準的な方法でコメントを追加可能\nドキュメント内の説明が容易\n3. **高度な機能**:",
      "アンカーと参照",
      "複雑なデータ構造の簡潔な表現",
      "タグによる型指定"
    ]
  }
}