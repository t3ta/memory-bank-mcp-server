{
  "schema": "memory_document_v2",
  "metadata": {
    "id": "8c6acc27-8e0f-4f3e-b7a9-fae087522db7",
    "title": "テストディレクトリリファクタリング実装計画",
    "documentType": "generic",
    "path": "test-directory-refactoring-plan.md",
    "tags": [],
    "lastModified": "2025-03-19T09:39:00.913Z",
    "createdAt": "2025-03-19T09:39:00.913Z",
    "version": 1
  },
  "content": {
    "rawContent": "# テストディレクトリリファクタリング実装計画\n\n## 概要\n\n`docs/test-directory-refactoring.md`に基づいて、テストディレクトリを再構成します。目的は、クリーンアーキテクチャに合わせた明確なテスト構造を実現し、テストの種類によるディレクトリ分離を行うことです。\n\n## 現状分析\n\n1. すでに新しいディレクトリ構造（`tests/unit/`, `tests/integration/api/`など）は一部作成済み\n2. 元の`src/`内のユニットテストは削除済み、一部は新しい場所へ移動済み\n3. 以前の統合テストファイルも削除済み\n\n## 実装ステップ\n\n### 1. ディレクトリ構造の完成\n\n- [x] ベースディレクトリの作成（`unit`, `integration`, `e2e`）\n- [x] `unit`ディレクトリのサブディレクトリ作成\n- [x] `integration`ディレクトリのサブディレクトリ作成\n- [ ] `e2e`ディレクトリの整備\n\n### 2. テストファイルの移動\n\n- [ ] 残りのユニットテストを`tests/unit/`の適切なサブディレクトリに移動\n- [ ] 残りの統合テストを`tests/integration/`の適切なサブディレクトリに移動\n- [ ] E2Eテストを`tests/e2e/`に移動\n\n### 3. 設定ファイルの調整\n\n- [ ] `jest.config.js`の更新確認\n- [ ] `tsconfig.test.json`の更新確認\n- [ ] テスト向けヘルパーとユーティリティの配置確認\n\n### 4. テスト実行とエラー修正\n\n- [ ] 新しい構造でのテスト実行\n- [ ] インポートパスのエラー修正\n- [ ] 必要に応じたテストの修正・リファクタリング\n\n## 完了条件\n\n1. すべてのテストファイルが新しい構造に配置されている\n2. テスト設定が新しい構造に合わせて更新されている\n3. すべてのテストが正常に実行できる\n4. テストのカバレッジが維持されている\n\n## 注意点\n\n1. テストファイルを移動する際は、関連するインポートパスも更新する必要がある\n2. テスト間の依存関係に注意し、参照が壊れないようにする\n3. 新しい構造でテスト実行のパフォーマンスが悪化していないことを確認する\n",
    "sections": {
      "": "1. テストファイルを移動する際は、関連するインポートパスも更新する必要がある\n2. テスト間の依存関係に注意し、参照が壊れないようにする\n3. 新しい構造でテスト実行のパフォーマンスが悪化していないことを確認する"
    }
  }
}